{"version":3,"sources":["components/form.js","components/Todo.js","components/TodoList.js","components/Filters.js","App.js","index.js"],"names":["AddingForm","setTodos","useState","query","setQuery","onSubmit","event","preventDefault","current","id","Date","title","trim","completed","type","className","placeholder","value","onChange","target","trimLeft","Todo","onEditStatus","setEditStatus","todoText","setTodoText","onBlur","map","elem","classnames","editing","checked","todo","onDoubleClick","onClick","filter","autoFocus","onKeyDown","key","TodoList","todos","Filters","FILTERS","setFilter","href","all","active","App","toggleAllStatus","setStatus","useEffect","localStorage","JSON","parse","getItem","setItem","stringify","some","toggleAllChanger","htmlFor","todosArray","todosFilter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d8684f0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddingForm = ({ setTodos }) => {\n  const [query, setQuery] = useState('');\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (!query) {\n      return;\n    }\n\n    setTodos(current => (\n      [\n        ...current,\n        { id: +new Date(),\n          title: query.trim(),\n          completed: false },\n      ]\n    ));\n    setQuery('');\n  };\n\n  return (\n    <form\n      onSubmit={handleFormSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={query}\n        onChange={({ target }) => {\n          setQuery(target.value.trimLeft());\n        }}\n      />\n    </form>\n  );\n};\n\nAddingForm.propTypes = {\n  setTodos: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport function Todo({\n  title,\n  completed,\n  id,\n  // todos,\n  setTodos,\n}) {\n  const [onEditStatus, setEditStatus] = useState(false);\n  const [todoText, setTodoText] = useState(title);\n\n  const removeTodo = x => (\n    setTodos(current => [...current].filter(elem => elem.id !== id))\n  );\n\n  const changeCheckbox = () => {\n    setTodos(current => current.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    }));\n    // setStatus(!status);\n  };\n\n  const onKeyPush = (key) => {\n    if (key === 'Enter') {\n      onBlur();\n    } else if (key === 'Escape') {\n      setTodoText(title);\n      setEditStatus(false);\n    }\n  };\n\n  const onBlur = () => {\n    if (!todoText) {\n      setEditStatus(false);\n    } else {\n      setTodoText(todoText.trim());\n      setTodos(current => [...current].map((elem) => {\n        if (elem.id === id) {\n          return { ...elem, title: todoText };\n        }\n\n        return elem;\n      }));\n      setEditStatus(false);\n    }\n  };\n\n  return (\n    <li className={classnames({\n      completed,\n      editing: onEditStatus,\n    })}\n    >\n      <div>\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => changeCheckbox()}\n        />\n        {!onEditStatus && (\n          <label\n            onDoubleClick={() => setEditStatus(true)}\n          >\n            {title}\n          </label>\n        )}\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => removeTodo(id)}\n        />\n      </div>\n      {onEditStatus && (\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"edit\"\n          value={todoText}\n          onChange={event => setTodoText(event.target.value.trimLeft())}\n          onKeyDown={event => onKeyPush(event.key)}\n          onBlur={onBlur}\n        />\n      )}\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Todo } from './Todo';\n\nexport function TodoList({\n  todos,\n  setTodos,\n}) {\n  return (\n    todos.map(elem => (\n      <Todo\n        key={elem.id}\n        {...elem}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    ))\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Filters({\n  filter,\n  FILTERS,\n  setFilter,\n}) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={`${filter === 'all' ? 'selected' : null}`}\n          onClick={() => setFilter(FILTERS.all)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={`${filter === 'active' ? 'selected' : null}`}\n          onClick={() => setFilter(FILTERS.active)}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={`${filter === 'completed' ? 'selected' : null}`}\n          onClick={() => setFilter(FILTERS.completed)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nFilters.propTypes = {\n  filter: PropTypes.bool.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  FILTERS: PropTypes.shape({\n    all: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    completed: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { AddingForm } from './components/form';\nimport { TodoList } from './components/TodoList';\nimport { Filters } from './components/Filters';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [toggleAllStatus, setStatus] = useState(false);\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    if (localStorage.todos) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const FILTERS = {\n    all: 'all',\n    active: 'active',\n    completed: 'completed',\n  };\n\n  const completedTodosCounter = x => (x\n    .filter(elem => !elem.completed).length);\n\n  const toggleAllChanger = () => {\n    // const toggler = todos.some(elem => !elem.completed)\n    //   ? true : toggleAllStatus;\n    // if (todos.some(elem => !elem.completed)) {\n    //   setStatus(true);\n    // }\n    if (todos.some(elem => elem.completed) && !toggleAllStatus) {\n      setStatus(true);\n      setTodos(current => [...current]\n        .map(elem => ({\n          ...elem, completed: !toggleAllStatus,\n        })));\n\n      return;\n    }\n\n    setTodos(current => [...current]\n      .map(elem => ({\n        ...elem, completed: !toggleAllStatus,\n      })));\n\n    setStatus(!toggleAllStatus);\n  };\n\n  const clearCompleted = () => (\n    setTodos(current => [...current].filter(elem => !elem.completed))\n  );\n\n  const todosFilter = (todosArray) => {\n    switch (filter) {\n      case FILTERS.active:\n        return todosArray.filter(elem => elem.completed === false);\n      case FILTERS.completed:\n        return todosArray.filter(elem => elem.completed === true);\n      default:\n        return todosArray;\n    }\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <AddingForm setTodos={setTodos} />\n        <h1>todos App</h1>\n      </header>\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleAllStatus}\n          onChange={() => toggleAllChanger()}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          <TodoList\n            todos={todosFilter(todos)}\n            setTodos={setTodos}\n          />\n\n        </ul>\n      </section>\n\n      {todos.length !== 0\n        && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${completedTodosCounter(todos)} items left`}\n            </span>\n\n            <Filters\n              FILTERS={FILTERS}\n              setFilter={setFilter}\n              filter={filter}\n            />\n\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={() => clearCompleted()}\n            >\n              Clear completed\n            </button>\n          </footer>\n        )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}